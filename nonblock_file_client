#!/usr/bin/env python
# -*- coding=utf-8 -*-


"""
file: send.py
socket client
"""

import socket
import os
import sys
import struct


def socket_client():
    try:
        s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)  ##定义socket类型，网络通信，TCP
                                                               ##socket.SOCK_STREAM，流式socket , for TCP
        s.connect(('127.0.0.1', 6666))  ##要连接的IP与端口
    except socket.error as msg:
        print msg
        sys.exit(1)

    print s.recv(1024) ##接受欢迎消息

    while 1:
        filepath = raw_input('please input file path: ')##文件路径
        if os.path.isfile(filepath):  ##如果path是一个存在的文件，返回True。否则返回False。 
            # 定义定义文件信息。128s表示文件名为128bytes长，l表示一个int或log文件类型，在此为文件大小
            fileinfo_size = struct.calcsize('128sl') ##struct.calcsize用于计算格式字符串所对应的结果的长度
            # 定义文件头信息，包含文件名和文件大小
            fhead = struct.pack('128sl', os.path.basename(filepath),
                                os.stat(filepath).st_size) #struct.pack(fmt, v1, v2),struct.pack用于将Python的值根据格式符fmt，转换为字符串（因为Python中没有字节(Byte)类型
                                                           ###os.path.basename(filepath)返回path最后的文件名
                                                           ##os.stat(filepath).st_size 文件的大小，以位为单位
            s.send(fhead)##向服务端发送文件头信息，包含文件名、文件大小
            print 'client filepath: {0}'.format(filepath)#输出文件路径

            fp = open(filepath, 'rb')#读写打开一个二进制文件，允许读写数据，文件必须存在
            while 1:
                data = fp.read(1024)#读取内容，读取长度为1024字符/字节(b)
                if not data:
                    print '{0} file send over...'.format(filepath)
                    break
                s.send(data)#发送给服务端
        s.close()
        break


if __name__ == '__main__':
    socket_client()


